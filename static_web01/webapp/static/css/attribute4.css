.width-height{
    background-color: rgb(198, 198, 198);
    width: 250px;
    height: 200px;
}

/* 
    padding , margin 내부/외부 여백을 설정하기 위한 스타일 속성으로
    그냥 padding: 크기; margin: 크기; 로 설정하면 top,bottom,left,right 모두 적용
    아니면 특정 padding(or margin)-top: 크기;
               padding(or margin)-bottom: 크기;
               padding(or margin)-left: 크기;
               padding(or margin)-right: 크기; 로 설정 가능하며,
    
    또한,  padding(or margin): top right bottom left 순서대로 나열 방식으로 설정 가능하다.
            (예 padding(or margin): 25px 25px 25px 25px;)
*/

.padding-margin1{
    width: 200px;
    padding: 25px;
    margin: 25px;
    border-width: 1px;
    border-style: solid;
}
 
.padding-margin2{
    width: 200px;
    padding-top: 25px;
    padding-right: 25px;
    padding-bottom: 25px;
    padding-left: 25px;
    margin: 25px 25px 25px 25px;
    border-width: 1px;
    border-style: solid;
}

/* 
    display
    display: block; 블럭으로 변경
    display: inline; 인라인으로 변경
*/

.display > .block{
    display: block; /* span은 인라인영역인데 block으로 변경되어 block태그 단위로 개행 이뤄짐 */
}

.display > .inline{
    display: inline; /* div는 블럭영역인데 inline으로 변경되어 개행 없어짐 */
}

.display > .none{
    display: none; /* 보이지 않는 디스플레이 영역임.(영역자체도 보이지 않음) */
}

.visibility > .hidden{
    visibility: hidden; /* 보이지는 않지만 영역은 차지하고 있음. */
}

.box-sizing > .border-box1{
    width: 200px;
    height: 200px;
    /* border 너비/높이가 200px씩이므로 
        해당 content 영역은 border 200px에서 border-style: 1px padding: 20px를 뺀
        200px-(1px * 2 + 20px * 2)= 158px가 되는거임.  */
    border-style: solid;
    border-color: black;
    padding: 20px;
    box-sizing: border-box;
}
.box-sizing > .border-box2{
    width: 200px;
    height: 200px;
    border-style: solid;
    border-color: black;
}

.box-sizing > .content-box{
    width: 200px;
    height: 200px;
    /* content-box 너비/높이 설정 후 padding: 20px 적용되어 
    너비/높이 총 240px(border-styly 테두리 1px씩 총 2px 제외) 씩임. */
    border-style: solid;
    border-color: black;
    padding: 20px;
    box-sizing: content-box;
}

/* 테두리 관련 속성 */
.border > .style{
    width: 200px;
    height: 200px;
    border-style:solid dashed dotted inset; /*top 부터 시계방향임 */
    border-style: double; /* 두 줄 테두리 */
    border-width: thin medium thick thin; /* top 부터 시계방향임 */
    border-top-style: solid; /* 실선 */
    border-right-style: dashed; /* 파선 */
    border-bottom-style: dotted; /* 점선 */
    border-left-style: inset; /* 안으로 들어가보이는 음영 */
    border-style: outset; /* 튀어나온 음영 */
    border-color: red darkred black crimson; /*top 부터 시계방향임 */
    border-radius: 5px 10px 15px 20px; /* 둥근 테두리 반지름 크기 */ /*top 부터 시계방향임 */
    box-shadow: 5px 5px 5px 2px gray; /* box 영역 그림자 표시: 너비, 높이, 흐림, 번짐, 색상 */
}

/* 
    display inline 요소
        - inline 요소는 한 줄을 다 차지하지 않는다.
        - 화면에 표시되는 영역만큼만 차지한다.
        - 따라서, 나머지 공간에 다른 요소가 올 수 있다.
        - inline 요소 태그 : <img>, <br>, <a>, <span>, <input>, <button>, <label>
        - display: inline; 으로 지정하면 해당 요소를 inline으로 지정한다.
        - inline 요소 안에 inline 요소는 포함 가능하나 block 요소는 포함할 수 없다.
        - inline 요소는 html에서 글자로 취급되며 img를 삽입하면 영문자 글자로 인식되어
          아래에 공간이 살짝 잡히게 된다.(이를 제거하려면 img {display: block;}를 하면 되겠다.)
*/

.inline-area{
    border-style: solid;
}

.inline-area > .inline{
    display: inline;
    background-color:rgb(198, 198, 198, 0.7);

    /* inline 영역에서 너비와 높이는 적용 불가(변경 안됨) 
    width: 5000px;
    height: 5000px; */
   

    /* 외부 영역(.inline-area)은 바뀌지 않기 때문에 내부 인라인영역(inline)이 외부영역을 침범하는 형태 */
    /* inline 영역에서 padding, margin 은 top, bottom 설정이 불가능(padding은 정확하게는 top, bottom
       범위를 침범)하며 left, right는 적용됨. */
    padding: 20px; 
    border-style: solid;
    border-width: 20px;
    border-color: rgba(255, 0, 0, 0.5);
    margin: 20px;
}

/* 
    display block 요소
         - block 요소는 태그를 사용해 요소를 삽입했을 때 혼자 한 줄을 차지한다. 
           즉, 해당 요소의 너비가 100%라는 의미이다.
         - 따라서, 그 요소의 왼쪽이나 오른쪽에 다른 요소가 올 수 없다.
         - width, height, margin, padding 을 이용하여 크기나 위치를 지정하려면 block 요소여야 한다.
         - block 요소 태그: <div>, <p>, <h1>~<h6>, <ul>, <ol>, <li>, <form>, <hr>, <table>
                           , <address>
         - display: block; 으로 지정하면 해당 요소를 block으로 지정한다.
         - block 요소가 다른 block 또는 inline 요소를 감쌀 수 있다.
*/

.block-area{
    border-style: solid;
}

.block-area > .block{
    display: block;
    background-color:rgb(198, 198, 198, 0.7);
    /* block 영역은 너비와 높이 적용 됨. */
    width: 180px;
    height: 180px;
   

    /* 외부 영역(.inline-area)은 내부 블럭(block)영역을 받아 크기 조정됨. */
    /* block 영역에서 padding, margin 은 top, bottom, left, right 모두 적용됨. */
    padding: 20px; 
    border-style: solid;
    border-width: 20px;
    border-color: rgba(255, 0, 0, 0.5);
    margin: 20px;
}

/* 
    display inline-block 요소
         - display: inline; 으로 지정하면 요소들을 한 줄에 옆으로 배치할 수 있지만
           너비나 높이, 마진 같은 박스 모델 값이 정확하게 적용되지 않는다.
           (너비/높이는 적용 불가, 마진/패딩 은 좌우는 적용 가능-패딩은 정확하게는 상하 적용 시 범위 침범)
         - 즉, div 태그를 inline 처럼 배치하고 싶지만 크기 값을 주어야 할 경우, 
           display: inline-block을 사용한다.
*/

.inline-block-area{
    border-style: solid;
}
.inline-block-area > .inline-block{
    /* 
             block 영역의 특징인 width, height, padding, margin 모두 적용
           , inline 영역 특징인 한줄로 배치 적용됨. 
     */
    display: inline-block;
    background-color:rgb(198, 198, 198, 0.7);
    width: 180px;
    height: 180px;
    padding: 20px; 
    border-style: solid;
    border-width: 20px;
    border-color: rgba(255, 0, 0, 0.5);
    margin: 20px;
}